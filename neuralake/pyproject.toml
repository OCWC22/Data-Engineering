[tool.poetry]
name = "data-engineering-playground"
version = "0.1.0"
description = "A playground for modern data engineering concepts."
authors = ["OCWC22 <willschenwu@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
neuralake = "0.0.5"
polars = {version = "1.9.0", extras = ["aws"]}
pyarrow = "17.0.0"
requests = "^2.32.4"

[tool.poetry.group.dev.dependencies]
ruff = "^0.1.9"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"

[tool.ruff]
# Set the maximum line length to 88 (black default)
line-length = 88
target-version = "py311"

# Enable specific rule groups
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings  
    "F",      # pyflakes
    "I",      # isort
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "UP",     # pyupgrade
    "ARG",    # flake8-unused-arguments
    "SIM",    # flake8-simplify
    "TCH",    # flake8-type-checking
    "PTH",    # flake8-use-pathlib
]

# Never enforce these rules
ignore = [
    "E501",   # Line too long (handled by formatter)
    "B008",   # Do not perform function calls in argument defaults
    "B904",   # Allow raise without from
]

# Exclude specific directories
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "docs/build/",
]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Prefer Unix line endings
line-ending = "lf"

[tool.ruff.lint.isort]
# Group imports by type
force-single-line = false
force-sort-within-sections = true
known-first-party = ["neuralake"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
